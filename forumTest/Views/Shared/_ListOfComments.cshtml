@model CommentsViewModel

@{
    var comments = Model.Comments.Where(c => c.Parent == Model.ParentId);
}
<script>
    function toggleSibling(){
        var x = event.target.nextElementSibling;
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
    function toggleChildren(){
        //long but selects the children div
        var x = event.target.parentElement.nextElementSibling; 
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
        event.target.textContent="show";
        debugger;   
    }
    
</script>
@foreach (var comment in comments)
{
    <!-- top level of the comment -->
    <div>
        <div class="bar" ></div>
        <button onclick="toggleChildren()" class="link" style="float:right;" >hide</button>
        <p>@comment.Text</p>
    </div>
    <!-- this is the stuff to toggle -->
    <div>
        <div>
            <p>@comment.Time</p>

            <!-- this is the new comment sections -->
            <div>
                <button class="link" onclick="toggleSibling()">reply</button>
                <div style="display:None;" >
                    @Html.Partial("_NewComment", new Comment(){ Id = Guid.NewGuid(), Post=comment.Post, Parent=comment.Id })
                </div>
            </div>

            <!-- child comments -->
            <div class="indent"> 
                @Html.Partial("_ListOfComments", new CommentsViewModel(){ Comments = Model.Comments, ParentId = comment.Id})
            </div>
        </div>
    </div>


}

